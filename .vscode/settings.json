{
  // Coding Agent specific settings
  "chat.mcp.discovery.enabled": false, // Disable auto-discovery of MCP servers - if enabled, it will fetch servers from Claude
  "chat.promptFiles": true,
  "chat.promptFilesLocations": [".github/prompts"],
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,

  // SOURCE : https://code.visualstudio.com/docs/copilot/copilot-customization
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "file": ".github/copilot-instructions.md"
    }
    // {
    //   "text": "Always add a comment: 'Generated by Copilot'."
    // },
    // {
    //   "text": "In TypeScript always use underscore for private field names."
    // },
    // {
    //   "file": "general.instructions.md" // import instructions from file `general.instructions.md`
    // },
    // {
    //   "file": "db.instructions.md" // import instructions from file `db.instructions.md`
    // }
  ],

  // MCP server settings
  "mcp": {
    "inputs": [],
    "servers": {
      "time": {
        "command": "docker",
        "args": ["run", "-i", "--rm", "mcp/time"]
      },
      "filesystem": {
        "command": "npx",
        "args": [
          "-y",
          "@modelcontextprotocol/server-filesystem",
          "/Users/takis/Documents/sckool",
          "/Users/takis/Zotero/storage/"
        ]
      },
      "git": {
        "command": "docker",
        "args": [
          "run",
          "--rm",
          "-i",
          "--mount",
          "type=bind,src=${workspaceFolder},dst=/workspace",
          "mcp/git"
        ]
      },
      "brave-search": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-brave-search"],
        // "env": {
        //   "BRAVE_API_KEY": "${env:BRAVE_API_KEY}" // for inline env variables
        // }
        "envFile": "${workspaceFolder}/.env" // BRAVE_API_KEY must exist in the .env file
      },
      "github": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-github"],
        // "env": {
        //   "GITHUB_PERSONAL_ACCESS_TOKEN": "${env:GITHUB_PERSONAL_ACCESS_TOKEN}" // for inline env variables
        // }
        "envFile": "${workspaceFolder}/.env" // GITHUB_PERSONAL_ACCESS_TOKEN must exist in the .env file
      },
      "sequential-thinking": {
        "command": "npx",
        "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"]
      },
      "Context7": {
        "type": "stdio",
        "command": "npx",
        "args": ["-y", "@upstash/context7-mcp@latest"]
      }
    }
  }
}
